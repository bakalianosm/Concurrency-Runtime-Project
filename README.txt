Λειτουργικά Συστήματα - Προγραμματιστική Άσκηση 3
Μιχαήλ Μπακαλιάνος 
ΑΜ: 1115201700269


Σημέιωση : Στο αρχείο αυτό θα βρείτε διαδικαστικά για τον κώδικα που παρέδωσα. Τα πιο τεχνικά θέματα περιγράφονται και στα σχόλια σε κάθε αρχείο. Το συγκεκριμένο πρόγραμμα είναι γραμμένο σε Visual Studio Code και έχει δοκιμαστεί σε Ubuntu 20.04 με gcc 9.3.0 .  Θα προσπαθήσω να γράψω το αρχείο αυτό όσο πιο περιεκτικά γίνεται. Συνδυασμός του αρχείου αυτού καθώς και τον σχολιων που έχω προσθέσει, θα βοηθήσει να γίνει πλήρως κατανοητός ο τρόπος με τον οποίο έφερα εις πέρας αυτή την εργασία.


Ημερομηνία παράδοσης: Πέμπτη 17/12/2020.


Για την ορθή εκτέλεση του προγράμματος chef  πληκτρολογήστε τις εξής εντολές:
* make chef 
* make run_chef η make valgrind_chef αν θελετε να εκτελεστει ο chef με το valgrind 
Για την ορθή εκτέλεση των προγραμμάτων saladmakers πληκτρολογήστε τις εξής εντολές:
* make saladmaker
* make run_saladmaker_(#) όπου # ο αριθμός του σαλατοποιού που θέλουμε να καλέσουμε (από 1 μέχρι και 3) , ή make valgrind_saladmaker_(#) αν θελετε να εκτελεστει ο saladmaker με το valgrind 


Για καθαρισμό παραχθέντων εκτελέσιμων , καθώς και των παραχθέντων log files πληκτρολογήστε :
* make clean 


Δομή του προγράμματος : για την διεκπεραίωση αυτής της εργασίας έχω χωρίσει τον κώδικα σε modules και source files . Στα source files θα βρείτε τους κώδικες για τα κύρια προγράμματα chef και saladmaker. Στα modules περιλαμβάνονται βοηθητικές συναρτήσεις του chef, των saladmakers , κοινές σε όλους συναρτήσεις και τέλος, η λειτουργικότητα της κοινής μνήμης.


Log files :  στον φάκελο logs θα βρείτε τα αρχεία των σαλατοποιών και στο main directory το κοινό log file. 


Κοινή Μνήμη : στο αρχείο  shared_segment.h θα βρείτε ότι περιέχει η κοινή μνήμη και στο αρχείο shared_segment_functions  θα βρείτε συναρτήσεις που ενεργούν πάνω στη κοινή μνήμη. 
Βοηθητικές δομές κοινής μνήμης:
1. random_numbers είναι μια δομή που κρατάει τους τυχαίους αριθμούς[υλικά] που αναπαριστούν τα υλικά που πέταξε ο σεφ στο τραπέζι
2. saladmaker_info ειναι μια δομή που κρατάει αν υπάρχει κάθε ένα από τα υλικά που χρειάζονται για δημιουργία μιας σαλάτας.
3. shared_segment όλα τα “κοινά” δεδομένα.Αναλυτικότερα:
   1. sharedmem_mutex είναι ένας σημαφόρος για mutual exclusion στη κοινή μνήμη .
   2. saladmakersSum ένας σημαφόρος με αρχική τιμή 3 , ώστε να επιτρέπει να υπάτρχουν το πολύ 3 σαλατοποιοί στο πρόγραμμά μας.
   3. recieveMutex  είναι ένας σημαφόρος ο οποίος χρησιμοποιείται έτσι ώστε όταν ο σεφ παράγει υλικά , να σταματάει μέχρι ο σαλατοποιός να τα παραλάβει (μόλις τα παραλάβει ο σαλατοποιός , συνεχίζει ο σεφ με την επιλογή νέων τυχαίων υλικών)
   4. notifySaladmaker είναι ένας πίνακας από σημαφόρους. Έχουμε έναν σημαφόρο για  κάθε ενεργό saladmaker. H χρήση του είναι να ενημερώνεται ο σαλατοποιός μόλις ο σεφ πετάξει υλικά στο τραπέζι για τον συγκεκριμένο σαλατοποιό. 
   5. lofilemutex   ειναι ένας σημαφόρος που χρησιμοποιείται για mutual exclusion στο “μεγάλο” log file .
   6. completed_salads ακέραια μεταβλητή που ανα πάσα στιγμή αναφέρει πόσες είναι οι σαλάτες πο έχουν ετοιμαστεί
   7. active_saladmakers κρατάει πόσοι είναι ενεργοί σαλατοποιοί
   8. preperedSalads ένας πίνακας ακεραίων που κρατάει για κάθε σαλατοποιό πόσες σαλάτες έχει ετοιμάσει.
   9.  saladmakerResources είναι ένας πίνκας που για κάθε σαλατοποιό δείχνει ανα πάσα στιμγή πόσα υλικά έχουν στη διαθεσή τους και ποια.
   10.  saladmakerPIDs ένας πίνακας που κρατάει για κάθε σαλατοποιό το processID του.
   11. logFileName το όνομα του “μεγάλου” log file
   12. lgofile1 το όνομα του logfile  που παρήγαγε ο saladmaker1
   13. logfile2 το όνομα του logfile  που παρήγαγε ο saladmaker2
   14. logfile3 το όνομα του logfile  που παρήγαγε ο saladmaker3


 Καθώς επίσης έχουν οριστέι και 2 συναρτήσεις, μία για δημιουργία και μία για καταστροφή της κοινής μνήμης.


Διεργασία Chef  για τη λειτουργικότητα του σεφ, έχω φτιάξει στα modules ένα αρχείο chef_functions το οποίο περιέχει τις συναρτήσεις που καλούνται από τον σεφ. Αναλυτικότερα, μόλις λάβει τα ορίσματα ο σεφ, συνεχίζει με την δημιουργία και αρχικοποίηση της κοινής μνήμης . Είναι υπεύθυνος για αυτή την λειτουργία. Έπειτα μέχρι να παραχθούν οι σαλάτες που περιγράφονται στο numOfSalads όρισμα που δίνει ο χρήστης ,  επιλέγει τυχαία υλικά, με τη προυπόθεση να μην έχουν επιλεγεί τα ίδια με τη προηγούμενη φορά που επέλεξε ο σεφ υλικά. Αυτό επιτυγχάνεται με το να θυμάται τι υλικά διάλεξε κάθε φορά (μας νοιάζει η τελευταία). Στη συνέχεια γράφει στο μεγάλο αρχείο το μήνυμα με το τι υλικά πήρε.Έπειτα ,βάσει των επιλεχθέντων υλικών καλείται συνάρτηση η οποία αποφασίζει ποιος ειναι ο σαλατοποιός που δεν έχει τα δύο επιλεχθέντα υλικά κα τον “ξυπνάει”. Γράφει το μήνυμα αυτό στο αρχέιο και στη συνέχεια δίνει τα υλικά στον σαλατοποιό και περιμένει μέχρι να λαβει τα υλικά ο σαλατοποιός . Αφού λάβει τα υλικά ο σαλατοποιός, ο σεφ ξεκουράζεται για όσο χρόνο προδιαγράφεται από τον χρήση.Μόλις περάσει ο χρόνος αυτός και εφόσον δεν έχουν ετοιμαστεί οι σαλάτες που απαιτούνται , συνεχίζει με την επιλογή επόμενων υλικών , επαναλαμβάνοντας την ίδια ακριβώς διαδικασία μέχρι να ετοιμαστούν όλες οι σαλάτες.
Στη συνέχεια εκτυπώνει τον αριθμό των σαλατών που έχει ετοιμάσει ο κάθε ένας από τους σαλατοποιούς και καταστρέφει τη κοινή μνήμη. Το τελικό μεγάλο αρχείο με τα μηνύματα έχει και παραχθεί και αυτό που μένει είναι να βρεθούν τα διαστήματα. Μόλις γίνει και αυτό το πρόγραμμα έχει τελειώσει.


Διεργασία Saladmaker όπως και με τον σεφ , έχω φτιάξει ένα αρχέιο saladmaker_functions το οποίο περιλαμβάνει τις συναρτήσεις που καλούνται από τους σαλατοποιούς. Ανάλογα με τον σεφ λαμβάνονται τα ορίσματα, γίνεται άνοιγμα της κοινής μνήμης και attach και μειώνετια ο σημαφόρος  saladmakersSum ώστε να επιτρέπεται να λειτουργούν ταυτόχρονα το πολύ 3 σαλατοποιοί. Στη συνέχεια  βρίσκω για τον ποιο σαλατοποιό πρόκειται και αρχικοποιώ το αντίστοιχο log file.Έπειτα για όσο δεν έχουν φτιαχτεί οι απαιτούμενες σαλάτες κάνει την εξής δουλειά:
1. Περιμένει για υλικά και το γράφει στα logs
2. Μόλις λάβει τα υλικά το γράφει στα  logs 
3. Αυξάνει τον σημαφόρο recieve ώστε να παράγει ο σεφ νέα υλικά . 
4. Αρχίζει να φτιάχνει τη σαλάτα 
5. Κόβει τα υλικά : μια εργασία που έχει διάρκεια τουλάχιστον 400 milliseconds επειδή έχω βάλει ένα sleep μέσα στην cutIngredients 
6. Ενημερώνει ότι τέλειωσε η ετοιμασία της σαλάτας
Μόλις τελειώσει η διαδικασία παραγωγής της σαλάτας, ο σαλατοποιός δεν έχει να κάνει καμία άλλη εργασία. Γίνεται detatch το shared segment τελειώνει. 


Συμβάσεις
1. κατα την αρχικοποίηση της κοινής μνήμης κάθε σαλατοποιός, αρχικοποιείται με το να τπάρχει το υλικό που έχει πάντα δίπλα του. Αυτό δεν μειώνεται ποτέ, εχει πάντα τη τιμή EXISTS(1). Τα υπόλοιπα υλικά, δεν είναι προφανώς άπειρα , επομένως κάθε φορά που “κόβει τα υλικά” για να φτιάξει τη σαλάτα, η τιμή των 2 υλικών που πάντα του λείπουν γίνεται NOTEXISTS(0)
2. Το πολύ 3 saladmakers μπορεί να είναι ενεργοί ανα πάσα στιγμή.
3. Ο σεφ επιλέγει υλικά, μέχρι τα υλικά που επέλεξε να διαφέρουν με τα υλικά που είχε επιλέξει τη προηγούμενη φορά.
4. Οι σαλατοποιοί περιμένουν να ενημερωθούν από τον σεφ για την ύπαρξη υλικών στο τραπέζι. Μπορεί να έχουν ξεκινήσει οι σαλατοποιοί αλλά πριν τελειώσουν να ετοιμαστεί και η τελευταία σαλάτα. Αυτό το λύνει ο σεφ , μόλις παραχθεί και η τελευταία σαλάτα τους ξεμπλοκάρει όλους ώστε να τελειώσουν. 
5. Τα πεδία εκτύπωσης δεν περιέχουν brackets.